/* Autogenerated with Kurento Idl */

/*
 * (C) Copyright 2013-2015 Kurento (http://kurento.org/)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

var inherits = require('inherits');

var kurentoClient = require('kurento-client');

var checkType = kurentoClient.checkType;
var ChecktypeError = checkType.ChecktypeError;

var ComplexType = kurentoClient.register.complexTypes.ComplexType;


/**
 * Point coordinates.
 *
 * @constructor module:facesegmentator/complexTypes.Point
 *
 * @property {external:Integer} x
 *  Position in pixels of X coordinate of the point
 * @property {external:Integer} y
 *  Position in pixels of Y coordinate of the point
 */
function Point(pointDict){
  if(!(this instanceof Point))
    return new Point(pointDict)

  pointDict = pointDict || {}

  // Check pointDict has the required fields
  checkType('int', 'pointDict.x', pointDict.x, {required: true});
  checkType('int', 'pointDict.y', pointDict.y, {required: true});

  // Init parent class
  Point.super_.call(this, pointDict)

  // Set object properties
  Object.defineProperties(this, {
    x: {
      writable: true,
      enumerable: true,
      value: pointDict.x
    },
    y: {
      writable: true,
      enumerable: true,
      value: pointDict.y
    }
  })
}
inherits(Point, ComplexType)

// Private identifiers to allow re-construction of the complexType on the server
// They need to be enumerable so JSON.stringify() can access to them
Object.defineProperties(Point.prototype, {
  __module__: {
    enumerable: true,
    value: "facesegmentator"
  },
  __type__: {
    enumerable: true,
    value: "Point"
  }
})

/**
 * Checker for {@link module:facesegmentator/complexTypes.Point}
 *
 * @memberof module:facesegmentator/complexTypes
 *
 * @param {external:String} key
 * @param {module:facesegmentator/complexTypes.Point} value
 */
function checkPoint(key, value)
{
  if(!(value instanceof Point))
    throw ChecktypeError(key, Point, value);
};


module.exports = Point;

Point.check = checkPoint;
